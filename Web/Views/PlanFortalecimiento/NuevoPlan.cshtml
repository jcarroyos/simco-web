@using Simco.CrossInfraestructureLayer
@using Simco.DomainModelLayer.ViewModels

@model PlanConsultaModel
@{
    Layout = "~/Views/Shared/_LayoutInicio.cshtml";
}

<h2>Registro de un nuevo plan</h2>

<p>
    Los campos marcados con asterisco (*) son obligatorios
</p>

@using (Html.BeginForm("NuevoPlan", "PlanFortalecimiento", FormMethod.Post))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Plan.Id)
    @Html.HiddenFor(model => model.RegistrosModificados)
    @Html.HiddenFor(model => model.Notificar)

    <fieldset>
        <legend>Registro de acciones de mejoras al plan de fortalecimiento</legend>
        <p>
            En el siguiente módulo se estarán registrando las acciones de mejoras y ejercicios
            de acompañamientos a los planes de fortalecimiento de las diversas entidades museales
            registradas en SIMCO.
        </p>

        <div class="box-row">
            <div class="box">
                <div class="formulario-label">
                    <em>*</em> @Html.LabelFor(model => model.Plan.NombreMuseo)
                </div>
            </div>
        </div>
        <div class="box-row">
            <div class="box">
                <div class="formulario-control">
                    @Html.DropDownListFor(model => model.Plan.PejId, new SelectList(Model.Plan.Museos, "PersonaId", "Nombre", Model.Plan.PejId), new { @class = "chosen", style = "width:580px;", @onchange = "CargarLocalizacion()" })
                </div>
            </div>
        </div>
        <br />

        <div class="box-row">
            <div class="box">
                <div class="formulario-label">
                    @Html.LabelFor(model => model.Plan.Departamento)
                </div>
            </div>
            <div class="box">
                <div class="formulario-label">
                    @Html.LabelFor(model => model.Plan.Municipio)
                </div>
            </div>
        </div>
        <div class="box-row">
            <div class="box">
                <div class="formulario-control">
                    @Html.TextBoxFor(model => model.Plan.Departamento, new { @readonly = "readonly", style = "width:265px;" })
                </div>
            </div>
            <div class="box">
                <div class="formulario-control">
                    @Html.TextBoxFor(model => model.Plan.Municipio, new { @readonly = "readonly", style = "width:265px;" })
                </div>
            </div>
        </div>
        <br />

        <div class="box-row">
            <div class="box">
                <div class="formulario-label">
                    <em>*</em> @Html.LabelFor(model => model.Plan.Anio)
                </div>
            </div>
            <div class="box">
                <div class="formulario-label">
                    @Html.LabelFor(model => model.Plan.Fecha)
                </div>
            </div>
        </div>
        <div class="box-row">
            <div class="box">
                <div class="formulario-control">
                    @Html.TextBoxFor(model => model.Plan.Anio, new { style = "width:80px; " })
                </div>
                <div class="formulario-validator">
                    @Html.ValidationMessageFor(model => model.Plan.Anio)
                </div>
            </div>
            <div class="box">

                <div class="formulario-control">
                    @Html.TextBoxFor(model => model.Plan.Fecha, new { @readonly = "readonly", style = "width:150px; " })
                </div>
            </div>
        </div>
        <br />

        <div class="box-row">
            <div class="box">
                <div class="formulario-label">
                    <em>*</em> @Html.LabelFor(model => model.Plan.Plan)
                </div>
            </div>
        </div>
        <div class="box-row">
            <div class="box">
                <div class="formulario-control">
                    @Html.TextBoxFor(model => model.Plan.Plan, new { style = "width:620px;" })
                </div>
                <div class="formulario-validator">
                    @Html.ValidationMessageFor(model => model.Plan.Plan)
                </div>
            </div>
        </div>
        <br />

        <div class="box-row">
            <div class="box">
                <div class="formulario-label">
                    @Html.LabelFor(model => model.Plan.Diagnostico)
                </div>
            </div>
        </div>
        <div class="box-row">
            <div class="box">
                <div class="formulario-control">
                    @Html.TextAreaFor(model => model.Plan.Diagnostico, new { style = "width:620px; height: 280px;" })
                </div>
                <div class="formulario-validator">
                    @Html.ValidationMessageFor(model => model.Plan.Diagnostico)
                </div>
            </div>
        </div>
        <br />
    </fieldset>

    <fieldset>
        <legend>Categorías</legend>
        <div class="grilladatos-tabla-scroll">
            <div style="width: 2000px">
                @(Html.Kendo().Grid(Model.PlanTemas)
                        .Name("GridActividades")
                        .Columns(columns =>
                        {
                            columns.Bound(o => o.Categoria.Categoria).Width(150);
                            columns.Template(@<text><input id="@("Lvl1" + @item.Categoria.Id)" @if (item.Categoria.Nivel1) { <text> checked="checked" </text>        } name="@(@item.Categoria.Categoria)" type="checkbox" value="@(@item.Categoria.Nivel1)" onclick="return SeleccionarChk(this);" /></text>).Title("Nivel 1").Width(50);
                            columns.Template(@<text><input id="@("Lvl2" + @item.Categoria.Id)" @if (item.Categoria.Nivel2) { <text> checked="checked" </text>        } name="@(@item.Categoria.Categoria)" type="checkbox" value="@(@item.Categoria.Nivel2)" onclick="return SeleccionarChk(this);" /></text>).Title("Nivel 2").Width(50);
                            columns.Template(@<text><input id="@("Lvl3" + @item.Categoria.Id)" @if (item.Categoria.Nivel3) { <text> checked="checked" </text>        } name="@(@item.Categoria.Categoria)" type="checkbox" value="@(@item.Categoria.Nivel3)" onclick="return SeleccionarChk(this);" /></text>).Title("Nivel 3").Width(50);
                            columns.Bound(o => o.Categoria.Id).Hidden(true);
                            columns.Bound(o => o.Tema.Objetivo).Width(250);
                            columns.Bound(o => o.Tema.Meta).Width(250);
                            columns.Bound(o => o.Tema.Indicador).Width(150);
                            columns.Bound(o => o.Tema.RecursoSugerido).Width(250);
                            columns.Bound(o => o.Tema.MedioVerificacion).Width(150);
                            columns.Bound(o => o.Id).Hidden(true);
                        })
                )
            </div>
        </div>
        <div class="formulario-botones">
            @Html.ActionLink("Descargar Plan", "GenerarPDFPlanPersona", "PlanFortalecimiento", new { personaId = Model.Plan.PejId, planId = Model.Plan.Id }, new { @class = "boton" })
            @if (ViewBag.Perfil != null && ViewBag.Perfil == Perfiles.Administrador)
            {
                if (Model.Plan.Id == 0)
                {
                    <button class="boton" onclick="CrearPlan()">@Html.Raw(Constante.BotonGuardarPlan)</button>
                }
                else
                {
                    <button class="boton" onclick="actualizarData()">@Html.Raw(Constante.BotonGuardarPlan)</button>
                }

                <button class="boton" onclick="NotificarUsuario()">@Html.Raw(Constante.BotonEnviar)</button>
                @Html.ActionLink(Constante.BotonCancelar, "CargarPlanes", "PlanFortalecimiento", new object(), new { @class = "boton" })
            }
            else
            {
                @Html.ActionLink(Constante.BotonCancelar, "MostrarPlanes", "PlanFortalecimiento", new object(), new { @class = "boton" })
            }

        </div>
    </fieldset>

    @section scripts {
        <script type="text/javascript">

            $(document).ready(function () {
                $(".chosen").chosen();

                $('#Plan_PejId').change(function () {
                    CargarLocalizacion();
                });
            });

            function CargarLocalizacion() {
                var selectedItem = $('#Plan_PejId').val();
                var destinationDepto = $('#Plan_Departamento');
                var destinationMpio = $('#Plan_Municipio');

                if (selectedItem != null && selectedItem != '') {
                    $.getJSON('@Url.Action("ObtenerPersonaJuridicaDepto", "PlanFortalecimiento")', { personaId: selectedItem }, function (zona) {
                        destinationDepto.val(zona.Departamento);
                        destinationMpio.val(zona.Municipio);
                    });
                }
            }

            function SeleccionarChk(obj) {
                var $input = $(obj);
                var longitud = $input[0].id.length;
                var prefijo = $input[0].id.toString().substring(0, 4);
                var sufijo = $input[0].id.toString().substring(4, longitud);

                if ($input.is(":checked")) {
                    switch (prefijo) {
                        case "Lvl1":
                            $('#Lvl2' + sufijo).prop('checked', false);
                            $('#Lvl3' + sufijo).prop('checked', false);
                            break;
                        case "Lvl2":
                            $('#Lvl1' + sufijo).prop('checked', false);
                            $('#Lvl3' + sufijo).prop('checked', false);
                            break;
                        case "Lvl3":
                            $('#Lvl1' + sufijo).prop('checked', false);
                            $('#Lvl2' + sufijo).prop('checked', false);
                            break;
                    }

                    CargarObjetivo(sufijo, prefijo);
                }
                return true;
            }

            function CargarObjetivo(categoriaid, nivel) {
                if (nivel != null && categoriaid != null) {

                    var intNivel = 0;
                    switch (nivel) {
                        case "Lvl1":
                            intNivel = 1;
                            break;
                        case "Lvl2":
                            intNivel = 2;
                            break;
                        case "Lvl3":
                            intNivel = 3;
                            break;
                    }

                    $.getJSON('@Url.Action("CargarObjetivo", "PlanFortalecimiento")',
                        { categoriaId: categoriaid, nivel: intNivel },
                        function (tema) {
                            $('#GridActividades tr').each(function () {
                                var nodeList = $(this)[0].childNodes;

                                if (nodeList[4].innerHTML == categoriaid) {
                                    nodeList[5].innerHTML = tema.Objetivo;
                                    nodeList[6].innerHTML = tema.Meta;
                                    nodeList[7].innerHTML = tema.Indicador;
                                    nodeList[8].innerHTML = tema.RecursoSugerido;
                                    nodeList[9].innerHTML = tema.MedioVerificacion;
                                    return;
                                }

                            });
                        }); // Fin getJSON
                }
            }

            function actualizarData() {
                var updatedRecords = [];
                var incluir = false;
                var categoriaId;
                var planTemaId;
                var planId = $("#Plan_Id").val();

                $('#GridActividades tr').each(function () {
                    var nodeList = $(this)[0].childNodes;

                    $.each(nodeList, function (index, node) {
                        categoriaId = nodeList[4].innerHTML;
                        planTemaId = nodeList[10].innerHTML;

                        if (node.firstChild != null && node.firstChild.checked) {
                            switch (index) {
                                case 1:
                                case 2:
                                case 3:
                                    var Categoria = {
                                        Id: categoriaId,
                                        Nivel: index.toString()
                                    };

                                    var planTema = {
                                        Id: planTemaId,
                                        PlaId: planId,
                                        Categoria: Categoria
                                    };

                                    updatedRecords.push(planTema);
                                    break;
                            }
                        } //Fin If
                    }); // Fin Each
                });

                $('#RegistrosModificados').val(JSON.stringify(updatedRecords).replace(/\/Date/g, "\\\/Date").replace(/\)\//g, "\)\\\/"));
            }

            function CrearPlan() {
                actualizarData();
                var pejId = $('#Plan_PejId').val();
                var anio = $('#Plan_Anio').val();
                var nombrePlan = JSON.stringify($('#Plan_Plan').val());
                var diagnostico = JSON.stringify($('#Plan_Diagnostico').val());
                var registrosModificados = JSON.stringify($('#RegistrosModificados').val());

                if (pejId != null && pejId != '0' && anio != null && anio != '' && nombrePlan != null && nombrePlan != '' && registrosModificados != null && registrosModificados != '') {
                    $.ajax({
                        url: '@Url.Action("CrearPlan", "PlanFortalecimiento")',
                        type: 'POST',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        data: '{ pejId: ' + pejId + ', anio: ' + anio + ', nombrePlan: ' + nombrePlan + ', diagnostico: ' + diagnostico + ', registrosModificados: ' + registrosModificados + ' }'
                    }).done(function () {
                        //alert("Nuevo plan de fortalecimiento creado correctamente.");
                        window.location.href = '@Url.Action("CargarPlanes", "PlanFortalecimiento", new object())';
                    });
                }
            }

            function NotificarUsuario() {
                $('#Notificar').val('true');
                actualizarData();
            }

            function EnviarNotificacion() {
                var planId = $('#Plan_Id').val();
                if (planId != null && planId != '0') {
                    $.ajax({
                        url: '@Url.Action("EnviarNotificacionPlanUsuario", "PlanFortalecimiento")',
                        type: 'POST',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        data: '{ id: ' + planId + ' }'
                    }).done(function () {
                        alert("El plan de fortalecimiento fue notificado al usuario correspondiente.");
                    });
                }
            }

            $(function () {
                $("#Plan_Diagnostico").htmlarea({
                    toolbar: [
                            ["bold", "italic", "underline", "strikethrough", "|", "subscript", "superscript"],
                            ["increasefontsize", "decreasefontsize"], ["orderedlist", "unorderedlist"], ["indent", "outdent"],
                            ["justifyleft", "justifycenter", "justifyright"], ["link", "unlink", "image", "horizontalrule"],
                            ["p", "h1", "h2", "h3", "h4", "h5", "h6"], ["cut", "copy", "paste"],
                    ],

                    toolbarText: $.extend({}, jHtmlArea.defaultOptions.toolbarText, {
                        "bold": "Negrita",
                        "italic": "Cursiva",
                        "underline": "Subrayado"
                    }),

                });
            });

        </script>
    }

}