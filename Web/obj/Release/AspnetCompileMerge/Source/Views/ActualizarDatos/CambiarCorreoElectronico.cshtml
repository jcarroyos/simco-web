@using Simco.CrossInfraestructureLayer
@using Simco.DomainModelLayer.ViewModels

@model CorreoElectronicoCambiarModel
@{
    ViewBag.Title = "CambiarCorreoElectronico";
    Layout = "~/Views/Shared/_LayoutInicio.cshtml";
}

<h2>Cambiar correo electrónico</h2>

@using (Html.BeginForm("CambiarCorreoElectronico", "ActualizarDatos", FormMethod.Post, new { id = "FormCambiarCorreoElectronico" }))
{
    @Html.ValidationSummary(true)

    <fieldset>

        <p>Los campos marcados con asterisco (*) son obligatorios</p>

        <div class="box-row">
            <div class="box">
                <div class="formulario-label">
                    <em>*</em> @Html.LabelFor(model => model.CorreoElectronico)
                </div>
            </div>
        </div>
        <div class="box-row">
            <div class="box">
                <div class="formulario-control">
                    @Html.TextBoxFor(model => model.CorreoElectronico)
                </div>
                <div class="formulario-validator">
                    @Html.ValidationMessageFor(model => model.CorreoElectronico)
                </div>
            </div>
        </div>
        <br />

        <div class="box-row">
            <div class="box">
                <div class="formulario-label">
                    <em>*</em> @Html.LabelFor(model => model.NuevoCorreoElectronico)
                </div>
            </div>
        </div>
        <div class="box-row">
            <div class="box">
                <div class="formulario-control">
                    @Html.TextBoxFor(model => model.NuevoCorreoElectronico)
                </div>
                <div class="formulario-validator">
                    @Html.ValidationMessageFor(model => model.NuevoCorreoElectronico)
                </div>
            </div>
        </div>
        <br />

        <div class="box-row">
            <div class="box">
                <div class="formulario-label">
                    <em>*</em> @Html.LabelFor(model => model.ConfirmarCorreoElectronico)
                </div>
            </div>
        </div>
        <div class="box-row">
            <div class="box">
                <div class="formulario-control">
                    @Html.TextBoxFor(model => model.ConfirmarCorreoElectronico)
                </div>
                <div class="formulario-validator">
                    @Html.ValidationMessageFor(model => model.ConfirmarCorreoElectronico)
                </div>
            </div>
        </div>
        <br />

        <div class="box-row">
            <div class="box">
                <div class="formulario-label">
                    <em>*</em> @Html.LabelFor(model => model.Contrasena)
                </div>
            </div>
        </div>
        <div class="box-row">
            <div class="box">
                <div class="formulario-control">
                    @Html.PasswordFor(model => model.Contrasena)
                </div>
                <div class="formulario-validator">
                    @Html.ValidationMessageFor(model => model.Contrasena)
                </div>
            </div>
        </div>
        <br />
    </fieldset>

        <div class="formulario-botones">
            <input type="submit" value="@Html.Raw(Constante.BotonGuardarCambios)" name="GuardarCambios" class="boton" />
        </div>
}

